import React, {useEffect, useState} from 'react';
import {View, Text, Image, TouchableOpacity, StyleSheet} from 'react-native';
import {fetchMoviePosters} from '../services/fetchMoviePosters';

type ListItem = {
  id: string;
  title: string;
  description: string;
  image?: any;
  autogenerated: boolean;
  fechaCreacion?: number;
  peliculas?: string[];
  privada?: boolean;
};

export const ListItemComponent = ({
  item,
  navigation,
}: {
  item: ListItem;
  navigation: any;
}) => {
  const [moviePosters, setMoviePosters] = useState<string[]>([]);

  useEffect(() => {
    const fetchPosters = async () => {
      if (item.peliculas && item.peliculas.length > 0) {
        try {
          const lastMovieIds = item.peliculas
            .slice(-4)
            .map(id => parseInt(id, 10)); // Convierte los últimos 4 IDs a números
          const posters = await fetchMoviePosters(lastMovieIds); // Llama al servicio con los últimos 4 IDs
          const validPosters = posters
            .filter(poster => poster !== null) // Filtra los posters válidos
            .map(poster => `https://image.tmdb.org/t/p/w500${poster}`); // Construye las URLs completas
          setMoviePosters(validPosters);
        } catch (error) {
          console.error(
            'Error al obtener los posters de las películas:',
            error,
          );
        }
      }
    };

    fetchPosters();
  }, [item.peliculas]);

  const renderPlaceholderContent = () => {
    if (moviePosters.length === 4) {
      // Grid de 4 posters
      return (
        <View style={styles.movieGrid}>
          {moviePosters.map((poster, index) => (
            <Image
              key={index}
              source={{uri: poster}}
              style={styles.moviePoster}
            />
          ))}
        </View>
      );
    } else if (moviePosters.length > 0) {
      // Solo un poster grande
      return (
        <Image
          source={{uri: moviePosters[0]}}
          style={styles.image}
        />
      );
    } else {
      // Placeholder con la letra
      return (
        <View style={styles.placeholderImage}>
          <Text style={styles.placeholderText}>
            {item.title ? item.title.charAt(0) : '#'}
          </Text>
        </View>
      );
    }
  };

  const truncateDescription = (text: string) => {
    return text.length > 60 ? text.slice(0, 60) + '...' : text;
  };

  const formatTimestamp = (
    timestamp: {seconds: number; nanoseconds: number} | number,
  ) => {
    let date;

    if (typeof timestamp === 'number') {
      // Si es un número, conviértelo directamente a una fecha
      date = new Date(timestamp);
    } else {
      // Si es un objeto { seconds, nanoseconds }, conviértelo a una fecha
      date = new Date(timestamp.seconds * 1000);
    }

    return date.toLocaleDateString(); // Formatea la fecha (puedes personalizar el formato)
  };

  return (
    <TouchableOpacity
      style={styles.item}
      onPress={() =>
        navigation.navigate('ContenidoLista', {
          nombreLista: item.title,
          descripcion: item.description,
          tiempoCreacion: item.fechaCreacion
            ? formatTimestamp(item.fechaCreacion)
            : 'Sin fecha',
          peliculas: item.peliculas,
          privada: item.privada,
        })
      }>
      {item.image ? (
         <Image source={item.image} style={styles.image} />
      ) : (
        renderPlaceholderContent() // Renderiza el contenido del placeholder
      )}
      <View style={styles.textContainer}>
        <Text style={styles.title}>{item.title}</Text>
        <Text style={styles.description}>
          {truncateDescription(item.description)}
        </Text>
      </View>
    </TouchableOpacity>
  );
};

const styles = StyleSheet.create({
  item: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 12,
  },
  image: {
    width: 50,
    height: 75,
    marginRight: 12,
    borderRadius: 4,
  },
  placeholderImage: {
    width: 50,
    height: 75,
    marginRight: 12,
    borderRadius: 4,
    backgroundColor: '#124559',
    alignItems: 'center',
    justifyContent: 'center',
  },
  placeholderText: {
    color: '#FFFFFF',
    fontSize: 20,
    fontWeight: 'bold',
  },
  textContainer: {
    flex: 1,
  },
  title: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: 'bold',
  },
  description: {
    color: '#A1A1A1',
    fontSize: 14,
  },
  movieGrid: {
    width: 52,
    height: 78,
    flexDirection: 'row',
    flexWrap: 'wrap',
    alignItems: 'center',
    backgroundColor: '#124559',
    justifyContent: 'center',
    borderRadius: 4,
    overflow: 'hidden',
    marginRight: 12,
  },
  moviePoster: {
    width: 26, // Ajusta el ancho de cada poster
    height: 39, // Ajusta el alto de cada poster
    borderRadius: 2,
  },
});

export default ListItemComponent;
