import React, { useEffect, useState } from 'react';
import { View, Text, StyleSheet, FlatList, Image, TouchableOpacity } from 'react-native';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import { useNavigation } from '@react-navigation/native';
import { RootStackParamList } from '../types.ts';
import { collection, onSnapshot } from 'firebase/firestore';
import { db } from '../../android/app/src/config/firebaseConfig';

import masTardeImg from '../assets/masTarde.png';
import meGustaImg from '../assets/meGusta.png';
import yaVistasImg from '../assets/yaVistas.png';

type ListItem = {
  id: string;
  title: string;
  description: string;
  image?: any; 
  autogenerated: boolean;
};

const MisListasScreen = () => {
  const navigation = useNavigation<NativeStackNavigationProp<RootStackParamList>>();
  const [firebaseLists, setFirebaseLists] = useState<ListItem[]>([]);

  const staticLists: ListItem[] = [
    { id: '1', title: 'Ver más tarde', description: 'Lista autogenerada', autogenerated: true, image: masTardeImg },
    { id: '2', title: 'Favoritos', description: 'Lista autogenerada', autogenerated: true, image: meGustaImg },
    { id: '3', title: 'Películas ya vistas', description: 'Lista autogenerada', autogenerated: true, image: yaVistasImg },
  ];

  useEffect(() => {
    const unsubscribe = onSnapshot(collection(db, 'lista'), (snapshot) => {
      const fetchedLists: ListItem[] = snapshot.docs.map((doc) => {
        const data = doc.data();
        return {
          id: doc.id,
          title: data.nombreLista,
          description: data.descripcion && data.descripcion.trim() !== '' 
            ? data.descripcion 
            : 'Lista personalizada',
          image: data.image || undefined,
          autogenerated: false,
        };
      });
      setFirebaseLists(fetchedLists);
    });

    return unsubscribe;
  }, []);

  const allLists = [...staticLists, ...firebaseLists];

  const renderItem = ({ item }: { item: ListItem }) => (
    <TouchableOpacity style={styles.item}>
      {item.image && (
        <Image
          source={item.autogenerated ? item.image : { uri: item.image }}
          style={styles.image}
        />
      )}
      <View style={styles.textContainer}>
        <Text style={styles.title}>{item.title}</Text>
        <Text style={styles.description}>{item.description}</Text>
      </View>
    </TouchableOpacity>
  );

  return (
    <View style={styles.container}>
      <View style={styles.header}>
        <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>
          <Text style={styles.backButtonText}>←</Text>
        </TouchableOpacity>
        <Text style={styles.headerTitle}>Mis listas</Text>
      </View>
      <FlatList
        data={allLists}
        keyExtractor={(item) => item.id}
        renderItem={renderItem}
        ItemSeparatorComponent={() => <View style={styles.separator} />}
      />
      <TouchableOpacity
        style={styles.newButton}
        onPress={() => navigation.navigate('NuevaLista')}
      >
        <Text style={styles.newButtonText}>+ Nuevo</Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#01161E',
    paddingHorizontal: 16,
    paddingTop: 16,
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    marginBottom: 16,
    position: 'relative',
  },
  backButton: {
    position: 'absolute',
    left: 0,
  },
  backButtonText: {
    color: '#FFFFFF',
    fontSize: 24,
  },
  headerTitle: {
    color: '#FFFFFF',
    fontSize: 20,
    fontWeight: 'bold',
  },
  item: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 12,
  },
  image: {
    width: 50,
    height: 75,
    marginRight: 12,
    borderRadius: 4,
  },
  textContainer: {
    flex: 1,
  },
  title: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: 'bold',
  },
  description: {
    color: '#A1A1A1',
    fontSize: 14,
  },
  separator: {
    height: 1,
    backgroundColor: '#124559',
  },
  newButton: {
    backgroundColor: '#EFF6E0',
    padding: 12,
    borderRadius: 8,
    alignItems: 'center',
    marginVertical: 16,
  },
  newButtonText: {
    color: '#01161E',
    fontSize: 16,
    fontWeight: 'bold',
  },
});

export default MisListasScreen;
